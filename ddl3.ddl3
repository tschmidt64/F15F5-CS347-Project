DROP SEQUENCE F15_F5_Cmt_seq ; 
create sequence F15_F5_Cmt_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15_F5_Cmt_PK_trig 
before insert on F15_F5_Cmt
for each row 
begin 
select F15_F5_Cmt_seq.nextval into :new.cmt_id from dual; 
end; 
/
alter table F15_F5_Cmt add created date ; 
alter table F15_F5_Cmt add created_by VARCHAR2 (255) ; 
alter table F15_F5_Cmt add row_version_number integer ; 
alter table F15_F5_Cmt add updated date ; 
alter table F15_F5_Cmt add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15_F5_Cmt_AUD_trig 
before insert or update on F15_F5_Cmt 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15_F5_Emp_seq ; 
create sequence F15_F5_Emp_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15_F5_Emp_PK_trig 
before insert on F15_F5_Emp
for each row 
begin 
select F15_F5_Emp_seq.nextval into :new.emp_id from dual; 
end; 
/
alter table F15_F5_Emp add created date ; 
alter table F15_F5_Emp add created_by VARCHAR2 (255) ; 
alter table F15_F5_Emp add row_version_number integer ; 
alter table F15_F5_Emp add updated date ; 
alter table F15_F5_Emp add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15_F5_Emp_AUD_trig 
before insert or update on F15_F5_Emp 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15_F5_Lab_seq ; 
create sequence F15_F5_Lab_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15_F5_Lab_PK_trig 
before insert on F15_F5_Lab
for each row 
begin 
select F15_F5_Lab_seq.nextval into :new.lab_id from dual; 
end; 
/
alter table F15_F5_Lab add created date ; 
alter table F15_F5_Lab add created_by VARCHAR2 (255) ; 
alter table F15_F5_Lab add row_version_number integer ; 
alter table F15_F5_Lab add updated date ; 
alter table F15_F5_Lab add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15_F5_Lab_AUD_trig 
before insert or update on F15_F5_Lab 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15_F5_Project_seq ; 
create sequence F15_F5_Project_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15_F5_Project_PK_trig 
before insert on F15_F5_Project
for each row 
begin 
select F15_F5_Project_seq.nextval into :new.project_id from dual; 
end; 
/
alter table F15_F5_Project add created date ; 
alter table F15_F5_Project add created_by VARCHAR2 (255) ; 
alter table F15_F5_Project add row_version_number integer ; 
alter table F15_F5_Project add updated date ; 
alter table F15_F5_Project add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15_F5_Project_AUD_trig 
before insert or update on F15_F5_Project 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15_F5_RFE_seq ; 
create sequence F15_F5_RFE_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15_F5_RFE_PK_trig 
before insert on F15_F5_RFE
for each row 
begin 
select F15_F5_RFE_seq.nextval into :new.rfe_id from dual; 
end; 
/
alter table F15_F5_RFE add created date ; 
alter table F15_F5_RFE add created_by VARCHAR2 (255) ; 
alter table F15_F5_RFE add row_version_number integer ; 
alter table F15_F5_RFE add updated date ; 
alter table F15_F5_RFE add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15_F5_RFE_AUD_trig 
before insert or update on F15_F5_RFE 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15_F5_Role_Codes_seq ; 
create sequence F15_F5_Role_Codes_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15_F5_Role_Codes_PK_trig 
before insert on F15_F5_Role_Codes
for each row 
begin 
select F15_F5_Role_Codes_seq.nextval into :new.rcode from dual; 
end; 
/
alter table F15_F5_Role_Codes add created date ; 
alter table F15_F5_Role_Codes add created_by VARCHAR2 (255) ; 
alter table F15_F5_Role_Codes add row_version_number integer ; 
alter table F15_F5_Role_Codes add updated date ; 
alter table F15_F5_Role_Codes add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15_F5_Role_Codes_AUD_trig 
before insert or update on F15_F5_Role_Codes 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15_F5_Sts_seq ; 
create sequence F15_F5_Sts_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15_F5_Sts_PK_trig 
before insert on F15_F5_Sts
for each row 
begin 
select F15_F5_Sts_seq.nextval into :new.status_id from dual; 
end; 
/
alter table F15_F5_Sts add created date ; 
alter table F15_F5_Sts add created_by VARCHAR2 (255) ; 
alter table F15_F5_Sts add row_version_number integer ; 
alter table F15_F5_Sts add updated date ; 
alter table F15_F5_Sts add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15_F5_Sts_AUD_trig 
before insert or update on F15_F5_Sts 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15_F5_sc_seq ; 
create sequence F15_F5_sc_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15_F5_sc_PK_trig 
before insert on F15_F5_sc
for each row 
begin 
select F15_F5_sc_seq.nextval into :new.scode from dual; 
end; 
/
alter table F15_F5_sc add created date ; 
alter table F15_F5_sc add created_by VARCHAR2 (255) ; 
alter table F15_F5_sc add row_version_number integer ; 
alter table F15_F5_sc add updated date ; 
alter table F15_F5_sc add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15_F5_sc_AUD_trig 
before insert or update on F15_F5_sc 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP SEQUENCE F15_F5_sh_seq ; 
create sequence F15_F5_sh_seq 
start with 100 
increment by 1 
nomaxvalue 
;

create or replace trigger F15_F5_sh_PK_trig 
before insert on F15_F5_sh
for each row 
begin 
select F15_F5_sh_seq.nextval into :new.sh_id from dual; 
end; 
/
alter table F15_F5_sh add created date ; 
alter table F15_F5_sh add created_by VARCHAR2 (255) ; 
alter table F15_F5_sh add row_version_number integer ; 
alter table F15_F5_sh add updated date ; 
alter table F15_F5_sh add updated_by VARCHAR2 (255) ; 
/
create or replace trigger F15_F5_sh_AUD_trig 
before insert or update on F15_F5_sh 
for each row 
begin 
  if inserting then 
    :new.created := localtimestamp; 
    :new.created_by := nvl(wwv_flow.g_user,user); 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
    :new.row_version_number := 1; 
  elsif updating then 
    :new.row_version_number := nvl(:old.row_version_number,1) + 1; 
  end if; 
  if inserting or updating then 
    :new.updated := localtimestamp; 
    :new.updated_by := nvl(wwv_flow.g_user,user); 
  end if; 
end; 
/

DROP INDEX F15_F5_Emp_emp_id_FK_0 ;
CREATE INDEX F15_F5_Emp_emp_id_FK_0 ON Contacts(F15_F5_Emp_emp_id) ;
DROP INDEX F15_F5_RFE_rfe_id_FK_1 ;
CREATE INDEX F15_F5_RFE_rfe_id_FK_1 ON Contacts(F15_F5_RFE_rfe_id) ;
DROP INDEX F15_F5_Role_Codes_rcod_FK_2 ;
CREATE INDEX F15_F5_Role_Codes_rcod_FK_2 ON Contacts(F15_F5_Role_Codes_rcode) ;
DROP INDEX F15_F5_Emp_emp_id_FK_3 ;
CREATE INDEX F15_F5_Emp_emp_id_FK_3 ON F15_F5_Cmt(F15_F5_Emp_emp_id) ;
DROP INDEX F15_F5_RFE_rfe_id_FK_4 ;
CREATE INDEX F15_F5_RFE_rfe_id_FK_4 ON F15_F5_Cmt(F15_F5_RFE_rfe_id) ;
DROP INDEX F15_F5_Emp_emp_id_FK_5 ;
CREATE INDEX F15_F5_Emp_emp_id_FK_5 ON F15_F5_Lab(F15_F5_Emp_emp_id) ;
DROP INDEX F15_F5_Lab_lab_id_FK_6 ;
CREATE INDEX F15_F5_Lab_lab_id_FK_6 ON F15_F5_Project(F15_F5_Lab_lab_id) ;
DROP INDEX F15_F5_RFE_rfe_id_FK_7 ;
CREATE INDEX F15_F5_RFE_rfe_id_FK_7 ON F15_F5_RFE_Tasks(F15_F5_RFE_rfe_id) ;
DROP INDEX F15_F5_RFE_rfe_id_FK_8 ;
CREATE INDEX F15_F5_RFE_rfe_id_FK_8 ON F15_F5_Sts(F15_F5_RFE_rfe_id) ;
DROP INDEX F15_F5_sc_scode_FK_9 ;
CREATE INDEX F15_F5_sc_scode_FK_9 ON F15_F5_Sts(F15_F5_sc_scode) ;
DROP INDEX F15_F5_RFE_rfe_id_FK_10 ;
CREATE INDEX F15_F5_RFE_rfe_id_FK_10 ON F15_F5_sh(F15_F5_RFE_rfe_id) ;
DROP INDEX F15_F5_Sts_status_id_FK_11 ;
CREATE INDEX F15_F5_Sts_status_id_FK_11 ON F15_F5_sh(F15_F5_Sts_status_id) ;
